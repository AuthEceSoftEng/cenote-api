{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "bdms-api",
    "description" : "The API for the Big Data Management System",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://api.bdms.issel.ee.auth.gr/v1"
  } ],
  "security" : [ {
    "ApiKeyAuthHeader" : [ ]
  }, {
    "ApiKeyAuthQuery" : [ ]
  } ],
  "paths" : {
    "/projects/{PROJECT_ID}/events" : {
      "get" : {
        "tags" : [ "Event Collections" ],
        "summary" : "Return schema information for all the event collections in a given project, along with properties (and their types).",
        "operationId" : "inspectEventCollections",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include_schema",
          "in" : "query",
          "description" : "Optional boolean flag indicating if properties should be returned in the response. When not provided it defaults to true. Allowed values are true or false.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/events/{EVENT_COLLECTION}" : {
      "get" : {
        "tags" : [ "Event Collections" ],
        "summary" : "A GET request authenticated with a Read Key returns schema information for a single event collection, along with properties (and their types).",
        "operationId" : "inspectEventCollection",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EVENT_COLLECTION",
          "in" : "path",
          "description" : "The event collection name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "post" : {
        "tags" : [ "Events" ],
        "summary" : "Record a single event",
        "operationId" : "recordSingleEvent",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EVENT_COLLECTION",
          "in" : "path",
          "description" : "The event collection name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Event recorded"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/events/{EVENT_COLLECTION}/properties/{PROPERTY_NAME}" : {
      "get" : {
        "tags" : [ "Properties" ],
        "summary" : "Return details for a single property in a given event collection.",
        "operationId" : "inspectSingleProperty",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EVENT_COLLECTION",
          "in" : "path",
          "description" : "The event collection name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "PROPERTY_NAME",
          "in" : "path",
          "description" : "The property name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/count" : {
      "get" : {
        "tags" : [ "Analyses" ],
        "summary" : "Return the number of events in the collection matching given criteria.",
        "operationId" : "count",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezones",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Specifies the size of time interval by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/count_unique" : {
      "get" : {
        "tags" : [ "Analyses" ],
        "summary" : "Return the number of events with unique values, for a target property in a collection matching given criteria.",
        "operationId" : "countUnique",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target_property",
          "in" : "query",
          "description" : "Specifies the name of the property to analyze.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezones",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Specifies the size of time interval by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/minimum" : {
      "get" : {
        "tags" : [ "Analyses" ],
        "summary" : "Return the minimum numeric value for a target property, among all events in a collection matching given criteria.",
        "operationId" : "minimum",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target_property",
          "in" : "query",
          "description" : "Specifies the name of the property to analyze.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezones",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Specifies the size of time interval by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/maximum" : {
      "get" : {
        "tags" : [ "Analyses" ],
        "summary" : "Return the maximum numeric value for a target property, among all events in a collection matching given criteria.",
        "operationId" : "maximum",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target_property",
          "in" : "query",
          "description" : "Specifies the name of the property to analyze.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezones",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Specifies the size of time interval by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/sum" : {
      "get" : {
        "tags" : [ "Analyses" ],
        "summary" : "Calculate the sum of all numeric values for a target property, among all events in a collection matching given criteria.",
        "operationId" : "sum",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target_property",
          "in" : "query",
          "description" : "Specifies the name of the property to analyze.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezones",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Specifies the size of time interval by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/average" : {
      "get" : {
        "tags" : [ "Analyses" ],
        "summary" : "Calculate the average value for a target property, among all events in a collection matching given criteria.",
        "operationId" : "average",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target_property",
          "in" : "query",
          "description" : "Specifies the name of the property to analyze.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezones",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Specifies the size of time interval by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/median" : {
      "get" : {
        "tags" : [ "Analyses" ],
        "summary" : "Calculate the median value for a target property, among all events in a collection matching given criteria.",
        "operationId" : "median",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target_property",
          "in" : "query",
          "description" : "Specifies the name of the property to analyze.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezones",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Specifies the size of time interval by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/percentile" : {
      "get" : {
        "tags" : [ "Analyses" ],
        "summary" : "Calculate a specified percentile value for a target property, among all events in a collection matching given criteria.",
        "operationId" : "percentile",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "percentile",
          "in" : "query",
          "description" : "Specifies the percentile to calculate, supporting 0-100 with two decimal places of precision. Example 99.99",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "target_property",
          "in" : "query",
          "description" : "Specifies the name of the property to analyze.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezones",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Specifies the size of time interval by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/select_unique" : {
      "get" : {
        "tags" : [ "Analyses" ],
        "summary" : "Return a list of unique property values for a target property, among all events in a collection matching given criteria.",
        "operationId" : "selectUnique",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target_property",
          "in" : "query",
          "description" : "Specifies the name of the property to analyze.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezones",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "If an email address is specified, an email will be sent to it when your extraction is ready for download. If email is not specified, your extraction will be processed synchronously and your data will be returned as JSON.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Specifies the name of a property by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Specifies the size of time interval by which to group results. Using this parameter changes the response format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/projects/{PROJECT_ID}/queries/extraction" : {
      "get" : {
        "tags" : [ "Extractions" ],
        "summary" : "Creates an extraction request for full-form event data with all property values.",
        "operationId" : "extraction",
        "parameters" : [ {
          "name" : "PROJECT_ID",
          "in" : "path",
          "description" : "The project id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_collection",
          "in" : "query",
          "description" : "The event collection name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeframe",
          "in" : "query",
          "description" : "Limits analysis to a specific period of time when the events occurred.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filters",
          "in" : "query",
          "description" : "Refines the scope of events to be included in the analysis based on event property values.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Assigns a timezone offset to relative timeframes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "If an email address is specified, an email will be sent to it when your extraction is ready for download. If email is not specified, your extraction will be processed synchronously and your data will be returned as JSON.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest",
          "in" : "query",
          "description" : "An integer containing the number of most recent events to extract.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "property_names",
          "in" : "query",
          "description" : "A URL-encoded array of strings containing properties you wish to extract. If this parameter is omitted, all properties will be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : { },
    "securitySchemes" : {
      "ApiKeyAuthHeader" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header"
      },
      "ApiKeyAuthQuery" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "query"
      }
    }
  }
}